package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"errors"
	"fmt"
	"graphql-tutorial/src/graph/model"
	utilModels "graphql-tutorial/src/utils/models"
	utilModelsInterfaces "graphql-tutorial/src/utils/models/interfaces"
	"strconv"
)

// CreateUser is the resolver for the createUser field.
func (r *mutationResolver) CreateUser(ctx context.Context, input model.CreateUserInput) (*model.UserResponse, error) {
	// panic(fmt.Errorf("not implemented: CreateUser - createUser"))
	response := utilModels.CreateUser(utilModelsInterfaces.CreateUserInput{
		Age:       input.Age,
		Country:   input.Country,
		Email:     input.Email,
		FirstName: input.FirstName,
		LastName:  input.LastName,
		Role:      input.Role,
	})

	if !response.Success {
		return &response, errors.New(response.Error)
	}

	return &response, nil
}

// GetUser is the resolver for the getUser field.
func (r *queryResolver) GetUser(ctx context.Context, input *model.GetUserInput) (*model.UserResponse, error) {
	// panic(fmt.Errorf("not implemented: GetUser - getUser"))
	response := model.UserResponse{
		Error:   "",
		Success: false,
	}

	switch {
	case input.ID != nil:
		{
			userId, err := strconv.ParseUint(*input.ID, 10, 64)

			if err != nil {
				response.Error = "Invalid ID passed"
				return &response, errors.New(response.Error)
			}
			response = utilModels.FindUser(utilModelsInterfaces.GetUserInput{ID: uint(userId)})
		}
	case input.Email != nil:
		{
			response = utilModels.FindUser(utilModelsInterfaces.GetUserInput{Email: *input.Email})
		}
	default:
		response.Error = "Missing one of `id` or `email` payload to retrieve user"
		return &response, errors.New(response.Error)
	}

	return &response, nil
}

// GetUsers is the resolver for the getUsers field.
func (r *queryResolver) GetUsers(ctx context.Context) (*model.UsersResponse, error) {
	panic(fmt.Errorf("not implemented: GetUsers - getUsers"))
}
